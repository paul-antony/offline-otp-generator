{"version":3,"sources":["OtpScanner/OtpScanner.js","OtpGenerator/OtpGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["OtpScanner","props","delay","onError","handleError","onScan","handleScan","style","height","width","OtpGenerator","console","log","d","Date","state","generator","otp","getTOTP","time","getSeconds","this","timerID","setInterval","tick","clearInterval","t","setState","per","gauge__a","transform","className","slice","onClick","resetSecret","Component","App","secret","localStorage","getItem","OTP","bind","clearSecret","data","setItem","err","error","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5827db0.chunk.js","sourcesContent":["import QrReader from 'react-qr-scanner'\n \nfunction OtpScanner(props) {\n\n\n  const previewStyle = {\n    height: 652,\n    width: 480,\n  }\n\n    return(\n      <div>\n        <QrReader\n          delay = {50}\n          onError={props.handleError}\n          onScan={props.handleScan}\n          style={previewStyle}\n          />\n      </div>\n    )\n  }\n\nexport default OtpScanner;\n\n","import React, { Component } from 'react'\n\n\nimport './OtpGenerator.css';\n\n\nclass OtpGenerator extends Component{\n    constructor(props){\n        super(props);\n        console.log(props)\n        var d = new Date();\n        this.state = {\n            generator : props.generator,\n            otp : props.generator.getTOTP(),\n            time: d.getSeconds()%30,\n          }\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n          () => this.tick(),\n          1000\n        );\n      }\n    \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n      }\n\n    tick() {\n        var d = new Date();\n        var t = d.getSeconds()%30;\n        this.setState({\n          time: t\n        });\n\n        if(t === 0){\n            this.setState({otp:this.state.generator.getTOTP()})\n        }\n      }\n\n\n\n\n    render(){\n\n      let per = 0.5 - (this.state.time /30)*0.5;\n\n      const gauge__a = {transform: `rotate(${per}turn)`};\n  \n\n        return(\n\n          <div className = \"otp--body\">\n\n            <div className=\"gauge\">\n              <div className=\"gauge__body\">\n                <div className = \"gauge__fill\" style = {gauge__a}></div>\n                <div className=\"gauge__cover\">{30 - this.state.time}</div>\n              </div>\n            </div>\n            <div className =\"otp--box\">\n            <div className = \" otp--number\">{this.state.otp.slice(0,2)}</div>\n            <div className = \"otp--number\">{this.state.otp.slice(2,4)}</div>\n            <div className = \"otp--number\">{this.state.otp.slice(4)}</div>\n            </div>\n\n\n            <button className = \"btn\" onClick = {this.props.resetSecret}>Reset Secret</button>\n\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default OtpGenerator;","import React, { Component } from 'react'\n\nimport OTP from 'tiny-otp';\n\nimport OtpScanner from './OtpScanner/OtpScanner';\nimport OtpGenerator from './OtpGenerator/OtpGenerator'\n\n\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let secret = localStorage.getItem('secret') || null;\n    this.state = {\n      secret : secret,\n      generator : (secret != null) ?new OTP(secret,'base32'):null,\n    }\n \n    this.handleScan = this.handleScan.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.clearSecret = this.clearSecret.bind(this);\n    // this.setOtp = this.setOtp.bind(this);\n  }\n\n\n  handleScan(data){\n    console.log(data);\n    if (data != null){\n      this.setState({\n        secret: data,\n        generator : new OTP(data,'base32'),\n      })\n      localStorage.setItem('secret', data);\n      console.log(data)\n    }\n  }\n\n  handleError(err){\n    console.error(err)\n  }\n\n  clearSecret(){\n    this.setState({secret:null,\n                  generator:null});\n\n    localStorage.removeItem(\"secret\");\n  }\n\n\n  // setOtp(){\n  //   if (this.generator === none){\n  //       this.setState({generator : new OTP(this.secret)})\n  //   }\n  //   this.setState({otp:this.generator.getTOTP()})\n\n  // }\n  render(){\n\n    if (this.state.secret === null){\n\n    return(\n      <div>\n      <OtpScanner handleScan = {this.handleScan} handleError = {this.handleError}/>\n      <p>{this.state.secret}</p>\n      </div>\n    )}\n\n  else{\n    return(\n      <div>\n\n      <OtpGenerator generator = {this.state.generator} resetSecret = {this.clearSecret} />\n      </div>\n    )\n\n  }}\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}